CREATE OR REPLACE PACKAGE BODY PCLUB.CC_PKG_FIDELIDAD IS

  PROCEDURE CC_MERGE_FIDELIDAD(P_RETORNO OUT INT) IS
  VAL_BL  NUMBER := 0;
  BEGIN
    
    --Valido que la línea enviada no exista en el BlackList
    MERGE INTO PCLUB.CC_FIDELIDAD F
    USING (SELECT DISTINCT D.BLCKV_TELEFONO FROM PCLUB.CC_BLACKLIST_FIDELIDAD D) BLF
    ON (F.CCFIDV_TELEFONO = BLF.BLCKV_TELEFONO)
    WHEN MATCHED THEN
      UPDATE SET F.CCFIDC_VAL_BL = 1;
    COMMIT;
  
    --Solo ingreso en el WhiteList Fidelidad, las líneas que no se encuentren en el BlackList
    --Cuando no ha habido cambio de segmento
    MERGE INTO PCLUB.CC_WHITELIST_FIDELIDAD WH
    USING (SELECT * FROM PCLUB.CC_FIDELIDAD F WHERE F.CCFIDC_VAL_BL = VAL_BL) CC
    ON (WH.WHITV_TELEFONO = CC.CCFIDV_TELEFONO)
    WHEN MATCHED THEN
      UPDATE
         SET WH.WHITC_SMS = NULL
       WHERE CC.CCFIDV_SEGMENTO = WH.WHITV_SEGMENTO;
	COMMIT;
    --

    MERGE INTO PCLUB.CC_WHITELIST_FIDELIDAD WH
    USING (SELECT F.CCFIDV_TELEFONO, F.CCFIDV_SEGMENTO
             FROM PCLUB.CC_FIDELIDAD F
            WHERE F.CCFIDC_VAL_BL = VAL_BL) CC
    ON (WH.WHITV_TELEFONO = CC.CCFIDV_TELEFONO)
    WHEN MATCHED THEN
      --Cuando ha habido cambio de segmento
      UPDATE
         SET WH.WHITV_SEGM_ANT = WH.WHITV_SEGMENTO,
             WH.WHITV_SEGMENTO = CC.CCFIDV_SEGMENTO,
             WH.WHITD_FECHA    = SYSDATE,
             WH.whitc_estado   = '0',
             WH.WHITC_SMS      = NULL
       WHERE CC.CCFIDV_SEGMENTO <> WH.WHITV_SEGMENTO
    WHEN NOT MATCHED THEN
      INSERT
        (WH.WHITV_TELEFONO,WH.whitv_segmento,WH.WHITD_FECHA,WH.whitc_estado)
      VALUES
        (CC.CCFIDV_TELEFONO,ccfidv_segmento,SYSDATE,'0');

    IF SQL%FOUND THEN
      COMMIT;
      P_RETORNO := 1;
    ELSE
      ROLLBACK;
      P_RETORNO := 0;
    END IF;

  END CC_MERGE_FIDELIDAD;

  PROCEDURE CC_LIST_PDT_ACT(K_CUR_SALIDA OUT CUR_SEC) IS
  BEGIN
    OPEN K_CUR_SALIDA FOR

      SELECT C.WHITV_TELEFONO, C.WHITV_SEGMENTO, C.WHITV_SEGM_ANT
        FROM CC_WHITELIST_FIDELIDAD C
       WHERE C.WHITC_ESTADO = '0';
  END CC_LIST_PDT_ACT;

  PROCEDURE CC_ACT_FIDELIDAD(P_RETORNO OUT INT) IS
  BEGIN
    UPDATE CC_WHITELIST_FIDELIDAD WH
       SET WH.WHITC_ESTADO = '1', WH.WHITD_FECHA_AFILACION = SYSDATE
     WHERE WH.WHITV_TELEFONO IN
           (SELECT F. CCFIDV_TELEFONO FROM CC_FIDELIDAD F);
    IF SQL%FOUND THEN
      COMMIT;
      P_RETORNO := 1;
    ELSE
      ROLLBACK;
      P_RETORNO := 0;
    END IF;
  END CC_ACT_FIDELIDAD;

  PROCEDURE CC_LIST_CONFIG_SMS(K_CUR_SALIDA   OUT CUR_SEC,
                               P_CONFV_OPCION IN CC_CONFIG_SMS.CONFV_OPCION%TYPE,
                               P_CONFN_CODIGO IN CC_CONFIG_SMS.CONFN_CODIGO%TYPE) IS

  BEGIN
    OPEN K_CUR_SALIDA FOR
      SELECT S.CONFN_CODIGO || '|' || CONFV_DESCRIPCION || '|' ||
             CONFV_VALOR || '|' || CONFV_OPCION
        FROM CC_CONFIG_SMS S
       WHERE S.CONFV_OPCION = NVL(P_CONFV_OPCION, S.CONFV_OPCION)
         AND S.CONFN_CODIGO = NVL(P_CONFN_CODIGO, S.CONFN_CODIGO);

  END CC_LIST_CONFIG_SMS;

  PROCEDURE CC_ACT_FIDELIDAD_SMS(P_RETORNO OUT INT) IS
  BEGIN
    UPDATE CC_WHITELIST_FIDELIDAD WH
       SET WH.WHITC_SMS = '1'
     WHERE WH.WHITV_TELEFONO IN
           (SELECT F. CCFIDV_TELEFONO FROM CC_FIDELIDAD F);
    IF SQL%FOUND THEN
      COMMIT;
      P_RETORNO := 1;
    ELSE
      ROLLBACK;
      P_RETORNO := 0;
    END IF;
  END CC_ACT_FIDELIDAD_SMS;

  PROCEDURE CC_REP_LINEAS_BL(CURLINEASBL   OUT SYS_REFCURSOR) IS
  VAL_BL  NUMBER := 1;
  BEGIN
    OPEN CURLINEASBL FOR
      SELECT FI.CCFIDV_TELEFONO, FI.CCFIDV_SEGMENTO
        FROM PCLUB.CC_FIDELIDAD FI
       WHERE FI.CCFIDC_VAL_BL = VAL_BL;
  END CC_REP_LINEAS_BL;

END CC_PKG_FIDELIDAD;
/
